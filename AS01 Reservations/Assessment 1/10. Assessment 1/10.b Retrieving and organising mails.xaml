<Activity mc:Ignorable="sap sap2010" x:Class="_10_b_Retrieving_and_organising_mails" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="idictAssets" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1794,1996</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>_10_b_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="78">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="120">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="In this workflow we will retrieve the mails , extract data through regex from their body and attachments(.pdf) and send the reply back to the guests with their booking details." DisplayName="10.b Retrieving and organising mails" sap:VirtualizedContainerService.HintSize="610,1931" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="lstmails" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtMailsData" />
      <Variable x:TypeArguments="x:String" Name="strMailBody" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtAmendmentMail" />
      <Variable x:TypeArguments="x:String" Name="strPdfText" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtConfirmMail" />
      <Variable x:TypeArguments="x:String" Name="strGuestName" />
      <Variable x:TypeArguments="x:String" Name="strHotelName" />
      <Variable x:TypeArguments="x:String" Name="strUniqueId" />
      <Variable x:TypeArguments="x:String" Name="strEmail" />
      <Variable x:TypeArguments="x:String" Name="strAdultsCount" />
      <Variable x:TypeArguments="x:String" Name="strRoomType" />
      <Variable x:TypeArguments="x:String" Name="strStatus" />
      <Variable x:TypeArguments="x:Int32" Name="intConfirmationCode" />
      <Variable x:TypeArguments="x:String" Default="Hello {0},&#xA;Your Booking has been confirmed For {1} Room_Type, {2} Is the Confirmation_Number For any future Communication.&#xA;Regards&#xA;{3} Team" Name="strConfirmMailBody" />
      <Variable x:TypeArguments="x:String" Name="strHtmlBody" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtCancelledMail" />
      <Variable x:TypeArguments="x:String" Default="Hello {0},&#xA;Your Booking With Unique Id {1} has been cancelled.&#xA;Regards&#xA;{2} Team" Name="strCancelMailBody" />
      <Variable x:TypeArguments="x:String" Default="Hello {0},&lt;br&gt;&#xA;Your Booking With Unique Id {1} has been updated With below mentioned details.&lt;br&gt;" Name="strAmendmentMailBody1" />
      <Variable x:TypeArguments="x:String" Name="strBookingType" />
      <Variable x:TypeArguments="x:String" Default=" Regards &lt;br&gt;&#xA;{0} Team " Name="strAmendmentMailBody2" />
      <Variable x:TypeArguments="x:String" Default="sg810086@gmail.com" Name="strTempMail" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message Starting Message" sap:VirtualizedContainerService.HintSize="548,92" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Trace" Message="[&quot;10.b Execution Started&quot;]" />
    <ui:BuildDataTable DataTable="[dtMailsData]" DisplayName="Build Data Table 'dtMailsData'" sap:VirtualizedContainerService.HintSize="548,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Unique_x0020_Id&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Guest_x0020_Name&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Property&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;No._x0020_Of_x0020_Adults&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Room_x0020_Type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Status&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Booking_x0020_Type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Updated_x0020_Date_x0020_Time&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;" />
    <ui:GetOutlookMailMessages FilterByMessageIds="{x:Null}" Account="[idictAssets(&quot;AS01-EmailId&quot;).ToString]" DisplayName="Get Outlook Mail Messages" Filter="[idictAssets(&quot;AS01-Filter&quot;).ToString]" GetAttachements="False" sap:VirtualizedContainerService.HintSize="548,25" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="[idictAssets(&quot;AS01-MailFolder&quot;).tostring]" MarkAsRead="False" Messages="[lstmails]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" TimeoutMS="50000" Top="50" />
    <ui:LogMessage DisplayName="Log Message Mails Count" sap:VirtualizedContainerService.HintSize="548,92" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;No. of Retrieved Mails: &quot;+lstmails.Count.ToString]" />
    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each Mail in list of Retrieved Mails" sap:VirtualizedContainerService.HintSize="548,701" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[lstmails]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="snm:MailMessage">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="Mail" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Operation to be performed on each mail" sap:VirtualizedContainerService.HintSize="512,575" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="In this sequence we will Extract the data through Regex from the pdf attachments and body of retrieved mails." DisplayName="Sequence For Extracting Data" sap:VirtualizedContainerService.HintSize="450,123" sap2010:WorkflowViewState.IdRef="Sequence_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[Mail.Attachments.Cast(Of System.Net.Mail.Attachment).Any(Function(a) a.Name.Contains(&quot;.pdf&quot;)) = true]" DisplayName="Condition to check if mail has pdf attachment or not" sap:VirtualizedContainerService.HintSize="510,945" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Has pdf attachment" sap:VirtualizedContainerService.HintSize="376,297" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:SaveMailAttachments Attachments="{x:Null}" DisplayName="Save Attachments(.pdf)" ExcludeInlineAttachments="False" Filter=".pdf" FolderPath="[idictAssets(&quot;AS01-InputPath&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_1" Message="[Mail]" OverwriteExisting="False" />
                    <ui:ForEachFileX DisplayName="For Each pdf File in Input Data folder" Folder="[idictAssets(&quot;AS01-InputPath&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,81" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
                      <ui:ForEachFileX.Body>
                        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                          <ActivityAction.Argument1>
                            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="File" />
                          </ActivityAction.Argument1>
                          <ActivityAction.Argument2>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                          </ActivityAction.Argument2>
                          <Sequence DisplayName="Do the operations on each file" sap:VirtualizedContainerService.HintSize="493,587" sap2010:WorkflowViewState.IdRef="Sequence_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text Attachment file" FileName="[File.FullName]" sap:VirtualizedContainerService.HintSize="431,60" sap2010:WorkflowViewState.IdRef="ReadPDFText_2" Range="All" Text="[strPdfText]" />
                            <ui:MultipleAssign DisplayName="Multiple Assign 'Extracting Data'" sap:VirtualizedContainerService.HintSize="431,256" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[strGuestName]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strPdfText,"(?'NAME'(?&lt;=BOOKING\r\n).*)").Value.Trim]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[strHotelName]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strPdfText,"(?'Hotel'(?&lt;=HOTEL\r\n).*)").Value.Trim]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[strUniqueId]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strPdfText,"(?'UID'(?&lt;=NUMBER\r\n).*)").Value.Trim]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[strEmail]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strPdfText,"(?'Email'(?&lt;=email: )\w*\W\w*\W\w*\W\w*)").Value.Trim]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[strAdultsCount]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strPdfText,"(?'NOA'(?&lt;=Adults\r\n).*)").Value.Trim]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[strRoomType]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strPdfText,"(?'Rtype'(?&lt;=Type\r\n).*)").Value.Trim]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                            </ui:MultipleAssign>
                            <ui:DeleteFolderX DisplayName="Delete Folder 'Input Data'" sap:VirtualizedContainerService.HintSize="431,80" sap2010:WorkflowViewState.IdRef="DeleteFolderX_1" Path="[idictAssets(&quot;AS01-InputPath&quot;).ToString]" Recursive="True" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachFileX.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEachFileX>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Mail doesn't have pdf attachment" sap:VirtualizedContainerService.HintSize="476,466" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign Mail Body" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strMailBody]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Mail.Body]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:MultipleAssign DisplayName="Multiple Assign 'Extracted Data'" sap:VirtualizedContainerService.HintSize="434,256" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strGuestName]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strMailBody,"(?'NAME'(?&lt;=BOOKING\r\n\r\n).*)").Value.Trim]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strHotelName]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strMailBody,"(?'Hotel'(?&lt;=HOTEL\r\n\r\n).*)").Value.Trim]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strUniqueId]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strMailBody,"(?'UID'(?&lt;=NUMBER\r\n\r\n).*)").Value.Trim]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strEmail]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strMailBody,"(?'Email'(?&lt;=email: )\w*\W\w*\W\w*\W\w*)").Value.Trim]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strAdultsCount]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strMailBody,"(?'NOA'(?&lt;=Adults\r\n\r\n).*)").Value.Trim]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strRoomType]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strMailBody,"(?'Rtype'(?&lt;=Type\r\n\r\n).*)").Value.Trim]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                  </Sequence>
                </If.Else>
              </If>
              <ui:LogMessage DisplayName="Log Message 'Extracted data'" sap:VirtualizedContainerService.HintSize="510,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Guest Name: &quot;+strGuestName+&quot;;&quot;+&quot; Hotel Name: &quot;+strHotelName+&quot;;&quot;+&quot; Email Id: &quot;+strEmail+&quot;;&quot;+&quot; Unique Id: &quot;+strUniqueId+&quot;;&quot;+&quot; No oF Adults: &quot;+strAdultsCount]" />
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="In this sequence we will find the status on the basis of extracted data and move them to their respective folders in outlook. &#xA;Here 'Failed Mail' and 'Processed' Folders are prebuilt manually in outlook." DisplayName="Sequence For Moving Mails" sap:VirtualizedContainerService.HintSize="450,138" sap2010:WorkflowViewState.IdRef="Sequence_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[String.IsNullOrEmpty(strAdultsCount) Or String.IsNullOrEmpty(strEmail) Or String.IsNullOrEmpty(strGuestName) Or String.IsNullOrEmpty(strHotelName) Or String.IsNullOrEmpty(strRoomType) or String.IsNullOrEmpty(strUniqueId)]" DisplayName="Condition for moving mails" sap:VirtualizedContainerService.HintSize="510,778" sap2010:WorkflowViewState.IdRef="If_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Move Mail to Failed Folder" sap:VirtualizedContainerService.HintSize="476,298" sap2010:WorkflowViewState.IdRef="Sequence_13">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign status" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strStatus]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Failed</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:MoveOutlookMessage Account="[idictAssets(&quot;AS01-EmailId&quot;).tostring]" DisplayName="Move Outlook Mail Message to Failed folder" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_1" MailFolder="[idictAssets(&quot;AS01-FailedFolder&quot;).ToString]" MailMessage="[Mail]" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Move Mail to Processed Folder" sap:VirtualizedContainerService.HintSize="476,298" sap2010:WorkflowViewState.IdRef="Sequence_15">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign status" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strStatus]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Success</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:MoveOutlookMessage Account="[idictAssets(&quot;AS01-EmailId&quot;).ToString]" DisplayName="Move Outlook Mail Message to processed folder" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_2" MailFolder="[idictAssets(&quot;AS01-ProcessedFolder&quot;).ToString]" MailMessage="[Mail]" />
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="In this sequence we will filter the mails on the basis of their booking type and and send them the booking details in the defined format." DisplayName="Sequence For sending reply" sap:VirtualizedContainerService.HintSize="450,123" sap2010:WorkflowViewState.IdRef="Sequence_18">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:IfElseIf DisplayName="Condition for checking booking type" sap:VirtualizedContainerService.HintSize="553,4757" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                <ui:IfElseIf.ConditionBlocks>
                  <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                    <ui:IfElseIfBlock BlockType="If" Condition="[Mail.Subject.Contains(&quot;Confirmation&quot;)]">
                      <ui:IfElseIfBlock.Then>
                        <Sequence DisplayName="Mail is of confirmation type" sap:VirtualizedContainerService.HintSize="500,1437" sap2010:WorkflowViewState.IdRef="Sequence_10">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign Confirmation code" sap:VirtualizedContainerService.HintSize="438,82" sap2010:WorkflowViewState.IdRef="Assign_8">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[intConfirmationCode]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[New Random().Next(11111,99999)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign Booking type" sap:VirtualizedContainerService.HintSize="438,82" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strBookingType]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">New Booking</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:BuildDataTable DataTable="[dtConfirmMail]" DisplayName="Build Data Table 'dtConfirmMail'" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_5" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Unique_x0020_Id&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Guest_x0020_Name&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Property&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;No._x0020_Of_x0020_Adults&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Room_x0020_Type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Status_x0020_&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Booking_x0020_Type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Updated_x0020_Date_x0020_Time&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strUniqueId,strGuestName,strHotelName,strAdultsCount,strRoomType,strStatus,strBookingType,datetime.Now.ToString}]" DataTable="[dtConfirmMail]" DisplayName="Add Data Row to 'dtConfirmMail'" sap:VirtualizedContainerService.HintSize="438,186" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strUniqueId,strGuestName,strHotelName,strAdultsCount,strRoomType,strStatus,strBookingType,DateTime.Now.ToString}]" DataTable="[dtMailsData]" DisplayName="Add Data Row to 'dtMailsData'" sap:VirtualizedContainerService.HintSize="438,186" sap2010:WorkflowViewState.IdRef="AddDataRow_4" />
                          <TryCatch DisplayName="Try Catch to write in to logfile (if open)" sap:VirtualizedContainerService.HintSize="438,344" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                            <TryCatch.Try>
                              <ui:AppendRange DataTable="[dtConfirmMail]" DisplayName="Append Range Workbook 'logfile'" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="AppendRange_2" SheetName="Sheet1" WorkbookPath="[idictAssets(&quot;AS01-LogFilePath&quot;).ToString]" />
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Sequence catch block" sap:VirtualizedContainerService.HintSize="450,374" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:CloseApplication ContinueOnError="True" DisplayName="Close Application 'Button  Close'" sap:VirtualizedContainerService.HintSize="388,107" sap2010:WorkflowViewState.IdRef="CloseApplication_2">
                                      <ui:CloseApplication.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3fe3031a-6ed2-4077-b9f2-1b718fc007ca" InformativeScreenshot="7e490100d3327245ce441fc8924a992e" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='LogFile - Excel' /&gt;&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIAppFrameHelper' name='Close' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:CloseApplication.Target>
                                    </ui:CloseApplication>
                                    <ui:AppendRange DataTable="[dtConfirmMail]" DisplayName="Append Range Workbook 'logfile'" sap:VirtualizedContainerService.HintSize="388,116" sap2010:WorkflowViewState.IdRef="AppendRange_5" SheetName="Sheet1" WorkbookPath="[idictAssets(&quot;AS01-LogFilePath&quot;).ToString]" />
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[idictAssets(&quot;AS01-EmailId&quot;).ToString]" Body="[String.Format(idictAssets(&quot;AS01-ConfirmTemplate&quot;).ToString,strGuestName,strRoomType,intConfirmationCode,strHotelName)]" DisplayName="Send Outlook Mail Message 'Reply back to sender'" sap:VirtualizedContainerService.HintSize="438,146" sap2010:WorkflowViewState.IdRef="SendOutlookMail_4" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[idictAssets(&quot;AS01- Subject&quot;).ToString]" To="[strTempMail]">
                            <ui:SendOutlookMail.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                            </ui:SendOutlookMail.Files>
                          </ui:SendOutlookMail>
                        </Sequence>
                      </ui:IfElseIfBlock.Then>
                    </ui:IfElseIfBlock>
                    <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Mail.Subject.Contains(&quot;Cancelled&quot;)]">
                      <ui:IfElseIfBlock.Then>
                        <Sequence DisplayName="Mail is of cancelled type " sap:VirtualizedContainerService.HintSize="500,1315" sap2010:WorkflowViewState.IdRef="Sequence_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:BuildDataTable DataTable="[dtCancelledMail]" DisplayName="Build Data Table 'dtCancelledMail'" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_8" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Unique_x0020_Id&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Guest_x0020_Name&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Property&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;No._x0020_Of_x0020_Adults&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Room_x0020_Type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Status_x0020_&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Booking_x0020_Type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Updated_x0020_Date_x0020_Time&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                          <Assign DisplayName="Assign Booking type" sap:VirtualizedContainerService.HintSize="438,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strBookingType]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Cancelled</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strUniqueId,strGuestName,strHotelName,strAdultsCount,strRoomType,strStatus,strBookingType,DateTime.Now.ToString}]" DataTable="[dtCancelledMail]" DisplayName="Add Data Row to 'dtCancelledMail'" sap:VirtualizedContainerService.HintSize="438,186" sap2010:WorkflowViewState.IdRef="AddDataRow_5" />
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strUniqueId,strGuestName,strHotelName,strAdultsCount,strRoomType,strStatus,strBookingType,DateTime.Now.ToString}]" DataTable="[dtMailsData]" DisplayName="Add Data Row to 'dtMailsData'" sap:VirtualizedContainerService.HintSize="438,186" sap2010:WorkflowViewState.IdRef="AddDataRow_6" />
                          <TryCatch DisplayName="Try Catch for writing logfile if open" sap:VirtualizedContainerService.HintSize="438,344" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                            <TryCatch.Try>
                              <ui:AppendRange DataTable="[dtCancelledMail]" DisplayName="Append Range Workbook 'logfile'" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="AppendRange_3" SheetName="Sheet1" WorkbookPath="[idictAssets(&quot;AS01-LogFilePath&quot;).ToString]" />
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Catch block" sap:VirtualizedContainerService.HintSize="450,374" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:CloseApplication ContinueOnError="True" DisplayName="Close Application 'Button  Close'" sap:VirtualizedContainerService.HintSize="388,107" sap2010:WorkflowViewState.IdRef="CloseApplication_3">
                                      <ui:CloseApplication.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3fe3031a-6ed2-4077-b9f2-1b718fc007ca" InformativeScreenshot="7e490100d3327245ce441fc8924a992e" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='LogFile - Excel' /&gt;&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIAppFrameHelper' name='Close' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:CloseApplication.Target>
                                    </ui:CloseApplication>
                                    <ui:AppendRange DataTable="[dtCancelledMail]" DisplayName="Append Range Workbook 'logfile'" sap:VirtualizedContainerService.HintSize="388,116" sap2010:WorkflowViewState.IdRef="AppendRange_7" SheetName="Sheet1" WorkbookPath="[idictAssets(&quot;AS01-LogFilePath&quot;).ToString]" />
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[idictAssets(&quot;AS01-EmailId&quot;).ToString]" Body="[String.Format(idictAssets(&quot;AS01-CancelTemplate&quot;).ToString,strGuestName,strUniqueId,strHotelName)]" DisplayName="Send Outlook Mail Message of Cancellation type" sap:VirtualizedContainerService.HintSize="438,146" sap2010:WorkflowViewState.IdRef="SendOutlookMail_5" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[idictAssets(&quot;AS01- Subject&quot;).ToString]" To="[strTempMail]">
                            <ui:SendOutlookMail.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                            </ui:SendOutlookMail.Files>
                          </ui:SendOutlookMail>
                        </Sequence>
                      </ui:IfElseIfBlock.Then>
                    </ui:IfElseIfBlock>
                    <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Mail.Subject.Contains(&quot;Amendment &quot;)]">
                      <ui:IfElseIfBlock.Then>
                        <Sequence DisplayName="Mail is of Ammendment type" sap:VirtualizedContainerService.HintSize="500,1557" sap2010:WorkflowViewState.IdRef="Sequence_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:BuildDataTable DataTable="[dtAmendmentMail]" DisplayName="Build Data Table 'dtAmendmentMail'" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_9" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Unique_x0020_Id&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Guest_x0020_Name&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Property&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;No._x0020_Of_x0020_Adults&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Room_x0020_Type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Status_x0020_&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Booking_x0020_Type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Updated_x0020_Date_x0020_Time&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                          <Assign DisplayName="Assign Booking type" sap:VirtualizedContainerService.HintSize="438,82" sap2010:WorkflowViewState.IdRef="Assign_4">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strBookingType]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Amendment</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strUniqueId,strGuestName,strHotelName,strAdultsCount,strRoomType,strStatus,strBookingType,DateTime.Now.ToString}]" DataTable="[dtAmendmentMail]" DisplayName="Add Data Row 'dtAmendment'" sap:VirtualizedContainerService.HintSize="438,186" sap2010:WorkflowViewState.IdRef="AddDataRow_7" />
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strUniqueId,strGuestName,strHotelName,strAdultsCount,strRoomType,strStatus,strBookingType,DateTime.Now.ToString}]" DataTable="[dtMailsData]" DisplayName="Add Data Row 'dtMailsData'" sap:VirtualizedContainerService.HintSize="438,186" sap2010:WorkflowViewState.IdRef="AddDataRow_8" />
                          <TryCatch DisplayName="Try Catch for writing logfile if open" sap:VirtualizedContainerService.HintSize="438,344" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                            <TryCatch.Try>
                              <ui:AppendRange DataTable="[dtAmendmentMail]" DisplayName="Append Range Workbook 'logfile'" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="AppendRange_4" SheetName="Sheet1" WorkbookPath="[idictAssets(&quot;AS01-LogFilePath&quot;).ToString]" />
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Catch Block" sap:VirtualizedContainerService.HintSize="450,374" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:CloseApplication ContinueOnError="True" DisplayName="Close Application 'Button  Close'" sap:VirtualizedContainerService.HintSize="388,107" sap2010:WorkflowViewState.IdRef="CloseApplication_4">
                                      <ui:CloseApplication.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3fe3031a-6ed2-4077-b9f2-1b718fc007ca" InformativeScreenshot="7e490100d3327245ce441fc8924a992e" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='LogFile - Excel' /&gt;&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIAppFrameHelper' name='Close' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:CloseApplication.Target>
                                    </ui:CloseApplication>
                                    <ui:AppendRange DataTable="[dtAmendmentMail]" DisplayName="Append Range Workbook 'logfile'" sap:VirtualizedContainerService.HintSize="388,116" sap2010:WorkflowViewState.IdRef="AppendRange_6" SheetName="Sheet1" WorkbookPath="[idictAssets(&quot;AS01-LogFilePath&quot;).ToString]" />
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <ui:ReadTextFile File="{x:Null}" Content="[strHtmlBody]" DisplayName="Read Text File html file" FileName="[idictAssets(&quot;AS01-AmendmentTablePath&quot;).ToString]" sap:VirtualizedContainerService.HintSize="438,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
                          <Assign DisplayName="Assign strHtmlBody" sap:VirtualizedContainerService.HintSize="438,82" sap2010:WorkflowViewState.IdRef="Assign_5">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strHtmlBody]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strHtmlBody.Replace("VarGuest",strGuestName).Replace("VarProperty",strHotelName).Replace("VarNo Of Adults",strAdultsCount).Replace("VarRoom Type",strRoomType)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[idictAssets(&quot;AS01-EmailId&quot;).ToString]" Body="[String.Format(strAmendmentMailBody1,strGuestName,strUniqueId)+ strHtmlBody+string.Format(strAmendmentMailBody2,strHotelName)]" DisplayName="Send Outlook Mail Message Reply Back to guest" sap:VirtualizedContainerService.HintSize="438,146" sap2010:WorkflowViewState.IdRef="SendOutlookMail_6" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[idictAssets(&quot;AS01- Subject&quot;).ToString]" To="[strTempMail]">
                            <ui:SendOutlookMail.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </ui:SendOutlookMail.Files>
                          </ui:SendOutlookMail>
                        </Sequence>
                      </ui:IfElseIfBlock.Then>
                    </ui:IfElseIfBlock>
                  </sc:BindingList>
                </ui:IfElseIf.ConditionBlocks>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:IfElseIf>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message Confirmation message" sap:VirtualizedContainerService.HintSize="548,92" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Retrieved Mails have been moved to their specific folders&quot;+vbCrLf+&quot;Reply has been sent to all the guests&quot;]" />
    <TryCatch DisplayName="Try Catch for writing 'Main.xlsx' if open" sap:VirtualizedContainerService.HintSize="548,344" sap2010:WorkflowViewState.IdRef="TryCatch_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dtMailsData]" DisplayName="Write Range Workbook 'Main.xlsx'" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="WriteRange_7" SheetName="Sheet1" WorkbookPath="[idictAssets(&quot;AS01-OutputDataFilePath&quot;).ToString]" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="catch block" sap:VirtualizedContainerService.HintSize="450,374" sap2010:WorkflowViewState.IdRef="Sequence_22">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:CloseApplication DisplayName="Close Application 'Button  Close'" sap:VirtualizedContainerService.HintSize="388,107" sap2010:WorkflowViewState.IdRef="CloseApplication_5">
                <ui:CloseApplication.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="dd38c41e-2cca-4cf8-bb69-8e62a404682e" InformativeScreenshot="a9d308eeb300f50a882c1d0291716ae5" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='Main - Excel' /&gt;&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIAppFrameHelper' name='Close' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:CloseApplication.Target>
              </ui:CloseApplication>
              <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dtMailsData]" DisplayName="Write Range Workbook 'Main.xlsx'" sap:VirtualizedContainerService.HintSize="388,116" sap2010:WorkflowViewState.IdRef="WriteRange_8" SheetName="Sheet1" WorkbookPath="[idictAssets(&quot;AS01-OutputDataFilePath&quot;).ToString]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <ui:LogMessage DisplayName="Log Message Confirmation" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Data for current run is successfuly written in Excel File as well as in Logfile&quot;]" />
      </TryCatch.Finally>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message Ending Message" sap:VirtualizedContainerService.HintSize="548,92" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Trace" Message="[&quot;10.b Execution Ended&quot;]" />
  </Sequence>
</Activity>