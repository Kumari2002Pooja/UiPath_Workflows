<Activity mc:Ignorable="sap sap2010" x:Class="_10_a_Initializing_Assets" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="odictAssets" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>628,1983</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>_10_a_Initializing_Assets_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="26">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="48">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="In this workflow we will initialize the assets that we will use throughout our code.&#xA;we will move the assets by the use of 'dictionary' type variable.&#xA;Naming convention of Assets is done through the syntax :&#xA; ' LOGICAL CODE  -  ASSET ACTION NAME '&#xA;Here our logical code is  'AS01'" DisplayName="_10_a_Initializing_Assets" sap:VirtualizedContainerService.HintSize="400,1918" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message Starting" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;10.a Execution Started&quot;]" />
    <Assign DisplayName="Assign Dictionary for storing assets" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[odictAssets]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[New Dictionary(of String,Object)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:GetRobotAsset AssetName="AS01-FailedFolder" CacheStrategy="None" DisplayName="Get Asset AS01-FailedFolder" FolderPath="Assessment 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_14">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Object">[odictAssets("AS01-FailedFolder")]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="AS01-ProcessedFolder" CacheStrategy="None" DisplayName="Get Asset AS01-ProcessedFolder" FolderPath="Assessment 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_15">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Object">[odictAssets("AS01-ProcessedFolder")]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="AS01-EmailId" CacheStrategy="None" DisplayName="Get Asset 'EmailId'" FolderPath="Assessment 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Object">[odictAssets("AS01-EmailId")]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="AS01-Filter" CacheStrategy="None" DisplayName="Get Asset 'Filter Expression'" FolderPath="Assessment 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Object">[odictAssets("AS01-Filter")]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="AS01-MailFolder" CacheStrategy="None" DisplayName="Get Asset 'MailFolder'" FolderPath="Assessment 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_3">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Object">[odictAssets("AS01-MailFolder")]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="AS01-OutputDataFilePath" CacheStrategy="None" DisplayName="Get Asset AS01-OutputDataFilePath" FolderPath="Assessment 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_4">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Object">[odictAssets("AS01-OutputDataFilePath")]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="AS01-LogFilePath" CacheStrategy="None" DisplayName="Get Asset AS01-LogFilePath" FolderPath="Assessment 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_5">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Object">[odictAssets("AS01-LogFilePath")]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="AS01-InputPath" CacheStrategy="None" DisplayName="Get Asset AS01-InputPath" FolderPath="Assessment 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_6">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Object">[odictAssets("AS01-InputPath")]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="AS01-RecipentId" CacheStrategy="None" DisplayName="Get Asset AS01-RecipentId" FolderPath="Assessment 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_7">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Object">[odictAssets("AS01-RecipentId")]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="AS01- Subject" CacheStrategy="None" DisplayName="Get Asset 'AS01- Subject'" FolderPath="Assessment 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_8">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Object">[odictAssets("AS01- Subject")]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="AS01-HtmlMailBody" CacheStrategy="None" DisplayName="Get Asset AS01-HtmlMailBody" FolderPath="Assessment 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_9">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Object">[odictAssets("AS01-HtmlMailBody")]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="AS01-AmendmentTablePath" CacheStrategy="None" DisplayName="Get Asset AS01-AmendmentTablePath" FolderPath="Assessment 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_10">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Object">[odictAssets("AS01-AmendmentTablePath")]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="AS01-FinalMailBody" CacheStrategy="None" DisplayName="Get Asset AS01-FinalMailBody" FolderPath="Assessment 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_11">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Object">[odictAssets("AS01-FinalMailBody")]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="AS01-ConfirmTemplate" CacheStrategy="None" DisplayName="Get Asset AS01-ConfirmTemplate" FolderPath="Assessment 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_12">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Object">[odictAssets("AS01-ConfirmTemplate")]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="AS01-CancelTemplate" CacheStrategy="None" DisplayName="Get Asset AS01-CancelTemplate" FolderPath="Assessment 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_13">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Object">[odictAssets("AS01-CancelTemplate")]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:LogMessage DisplayName="Log Message End" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;All the assets have been initialized&quot;+vbcrlf+&quot;10.a Execution ended&quot;]" />
  </Sequence>
</Activity>